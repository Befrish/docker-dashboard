# This is a workflow that is manually triggered

name: release

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    inputs:
      release-version:
        description: 'Release version'
        required: true
      development-version:
        description: 'Development version (without SNAPSHOT)'
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  release:
    runs-on: [self-hosted]
    steps:
      - uses: actions/checkout@v4

      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set release version with Maven

        run: mvn -B -V org.codehaus.mojo:versions-maven-plugin:2.5:set -DnewVersion=${{ github.event.inputs.release-version }} org.codehaus.mojo:versions-maven-plugin:2.5:commit

      - name: Build with Maven
        run: mvn -B -V package --file pom.xml

      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ github.token }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.event.inputs.release-version }}
          release_name: Release ${{ github.event.inputs.release-version }}

      - name: Upload Release Asset JAR
        id: upload-release-asset-jar
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./target/jqwik-vavr-${{ github.event.inputs.release-version }}.jar
          asset_name: bricklink-client-${{ github.event.inputs.release-version }}.jar
          asset_content_type: application/java-archive

      #      - name: Upload Release Asset Sources JAR
      #        id: upload-release-asset-sources-jar
      #        uses: actions/upload-release-asset@v1
      #        env:
      #          GITHUB_TOKEN: ${{ github.token }}
      #        with:
      #          upload_url: ${{ steps.create-release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
      #          asset_path: ./target/jqwik-vavr-${{ github.event.inputs.release-version }}-sources.jar
      #          asset_name: bricklink-client-${{ github.event.inputs.release-version }}-sources.jar
      #          asset_content_type: application/java-archive

      # Publish: see https://github.com/actions/setup-java#publishing-using-apache-maven
      #      - name: Set up JDK 1.8
      #        uses: actions/setup-java@v1
      #        with:
      #          java-version: 1.8
      #          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml

      - name: Publish to GitHub Packages Apache Maven
        run: mvn deploy -Pdeploy-github -Dchecks.skip=true -DskipTests -DskipITs -Dmaven.javadoc.skip=true
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Set development version with Maven
        run: mvn -B -V org.codehaus.mojo:versions-maven-plugin:2.5:set -DnewVersion=${{ github.event.inputs.development-version }} org.codehaus.mojo:versions-maven-plugin:2.5:commit

      - name: Push update of development version
        uses: actions-x/commit@v2
        with:
          name: github-actions
          email: github-actions[bot]@users.noreply.github.com
          message: "Update development version to ${{ github.event.inputs.development-version }}"